#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bca_Department_classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BcaDepartment")]
	public partial class Bca_departmentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertDesignation(Designation instance);
    partial void UpdateDesignation(Designation instance);
    partial void DeleteDesignation(Designation instance);
    partial void InsertDptStaff(DptStaff instance);
    partial void UpdateDptStaff(DptStaff instance);
    partial void DeleteDptStaff(DptStaff instance);
    partial void InsertFeePaid(FeePaid instance);
    partial void UpdateFeePaid(FeePaid instance);
    partial void DeleteFeePaid(FeePaid instance);
    partial void InsertStudentType(StudentType instance);
    partial void UpdateStudentType(StudentType instance);
    partial void DeleteStudentType(StudentType instance);
    partial void InsertLoginLog(LoginLog instance);
    partial void UpdateLoginLog(LoginLog instance);
    partial void DeleteLoginLog(LoginLog instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertNotice(Notice instance);
    partial void UpdateNotice(Notice instance);
    partial void DeleteNotice(Notice instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPageGroup(PageGroup instance);
    partial void UpdatePageGroup(PageGroup instance);
    partial void DeletePageGroup(PageGroup instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleMenu(RoleMenu instance);
    partial void UpdateRoleMenu(RoleMenu instance);
    partial void DeleteRoleMenu(RoleMenu instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStaffLogin(StaffLogin instance);
    partial void UpdateStaffLogin(StaffLogin instance);
    partial void DeleteStaffLogin(StaffLogin instance);
    partial void InsertStaffLoginRole(StaffLoginRole instance);
    partial void UpdateStaffLoginRole(StaffLoginRole instance);
    partial void DeleteStaffLoginRole(StaffLoginRole instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public Bca_departmentDataContext() : 
				base(global::Bca_Department_classes.Properties.Settings.Default.BcaDepartmentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Bca_departmentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Bca_departmentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Bca_departmentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Bca_departmentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Designation> Designations
		{
			get
			{
				return this.GetTable<Designation>();
			}
		}
		
		public System.Data.Linq.Table<DptStaff> DptStaffs
		{
			get
			{
				return this.GetTable<DptStaff>();
			}
		}
		
		public System.Data.Linq.Table<FeePaid> FeePaids
		{
			get
			{
				return this.GetTable<FeePaid>();
			}
		}
		
		public System.Data.Linq.Table<StudentType> StudentTypes
		{
			get
			{
				return this.GetTable<StudentType>();
			}
		}
		
		public System.Data.Linq.Table<LoginLog> LoginLogs
		{
			get
			{
				return this.GetTable<LoginLog>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Notice> Notices
		{
			get
			{
				return this.GetTable<Notice>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PageGroup> PageGroups
		{
			get
			{
				return this.GetTable<PageGroup>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleMenu> RoleMenus
		{
			get
			{
				return this.GetTable<RoleMenu>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<StaffLogin> StaffLogins
		{
			get
			{
				return this.GetTable<StaffLogin>();
			}
		}
		
		public System.Data.Linq.Table<StaffLoginRole> StaffLoginRoles
		{
			get
			{
				return this.GetTable<StaffLoginRole>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityId;
		
		private int _StateId;
		
		private string _CityName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Student> _Students1;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public City()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Students1 = new EntitySet<Student>(new Action<Student>(this.attach_Students1), new Action<Student>(this.detach_Students1));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Student", Storage="_Students", ThisKey="CityId", OtherKey="PermanentCityId")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Student1", Storage="_Students1", ThisKey="CityId", OtherKey="CorrespondenceCityId")]
		public EntitySet<Student> Students1
		{
			get
			{
				return this._Students1;
			}
			set
			{
				this._Students1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_City", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_City1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Cities1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Cities1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_State", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._StateId = value.StateId;
					}
					else
					{
						this._StateId = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Students1(Student entity)
		{
			this.SendPropertyChanging();
			entity.City1 = this;
		}
		
		private void detach_Students1(Student entity)
		{
			this.SendPropertyChanging();
			entity.City1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Designation")]
	public partial class Designation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesignationId;
		
		private string _DesignationName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<DptStaff> _DptStaffs;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIdChanging(int value);
    partial void OnDesignationIdChanged();
    partial void OnDesignationNameChanging(string value);
    partial void OnDesignationNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Designation()
		{
			this._DptStaffs = new EntitySet<DptStaff>(new Action<DptStaff>(this.attach_DptStaffs), new Action<DptStaff>(this.detach_DptStaffs));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesignationId
		{
			get
			{
				return this._DesignationId;
			}
			set
			{
				if ((this._DesignationId != value))
				{
					this.OnDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._DesignationId = value;
					this.SendPropertyChanged("DesignationId");
					this.OnDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DesignationName
		{
			get
			{
				return this._DesignationName;
			}
			set
			{
				if ((this._DesignationName != value))
				{
					this.OnDesignationNameChanging(value);
					this.SendPropertyChanging();
					this._DesignationName = value;
					this.SendPropertyChanged("DesignationName");
					this.OnDesignationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Designation_DptStaff", Storage="_DptStaffs", ThisKey="DesignationId", OtherKey="DesignationId")]
		public EntitySet<DptStaff> DptStaffs
		{
			get
			{
				return this._DptStaffs;
			}
			set
			{
				this._DptStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Designation", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Designations.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Designations.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Designation1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Designations1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Designations1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DptStaffs(DptStaff entity)
		{
			this.SendPropertyChanging();
			entity.Designation = this;
		}
		
		private void detach_DptStaffs(DptStaff entity)
		{
			this.SendPropertyChanging();
			entity.Designation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DptStaff")]
	public partial class DptStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffId;
		
		private string _StaffName;
		
		private string _StaffCode;
		
		private byte _StaffType;
		
		private int _DesignationId;
		
		private string _Email;
		
		private System.DateTime _DOB;
		
		private byte _Gender;
		
		private string _FatherName;
		
		private System.Nullable<System.DateTime> _JoinDate;
		
		private string _StaffPhoto;
		
		private string _twitterLink;
		
		private string _facebookLink;
		
		private string _instaLink;
		
		private string _linkedinLink;
		
		private int _StaffOrder;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<Designation> _Designation;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnStaffCodeChanging(string value);
    partial void OnStaffCodeChanged();
    partial void OnStaffTypeChanging(byte value);
    partial void OnStaffTypeChanged();
    partial void OnDesignationIdChanging(int value);
    partial void OnDesignationIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnJoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinDateChanged();
    partial void OnStaffPhotoChanging(string value);
    partial void OnStaffPhotoChanged();
    partial void OntwitterLinkChanging(string value);
    partial void OntwitterLinkChanged();
    partial void OnfacebookLinkChanging(string value);
    partial void OnfacebookLinkChanged();
    partial void OninstaLinkChanging(string value);
    partial void OninstaLinkChanged();
    partial void OnlinkedinLinkChanging(string value);
    partial void OnlinkedinLinkChanged();
    partial void OnStaffOrderChanging(int value);
    partial void OnStaffOrderChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public DptStaff()
		{
			this._Designation = default(EntityRef<Designation>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffCode
		{
			get
			{
				return this._StaffCode;
			}
			set
			{
				if ((this._StaffCode != value))
				{
					this.OnStaffCodeChanging(value);
					this.SendPropertyChanging();
					this._StaffCode = value;
					this.SendPropertyChanged("StaffCode");
					this.OnStaffCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffType", DbType="TinyInt NOT NULL")]
		public byte StaffType
		{
			get
			{
				return this._StaffType;
			}
			set
			{
				if ((this._StaffType != value))
				{
					this.OnStaffTypeChanging(value);
					this.SendPropertyChanging();
					this._StaffType = value;
					this.SendPropertyChanged("StaffType");
					this.OnStaffTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationId", DbType="Int NOT NULL")]
		public int DesignationId
		{
			get
			{
				return this._DesignationId;
			}
			set
			{
				if ((this._DesignationId != value))
				{
					if (this._Designation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._DesignationId = value;
					this.SendPropertyChanged("DesignationId");
					this.OnDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffPhoto", DbType="NVarChar(255)")]
		public string StaffPhoto
		{
			get
			{
				return this._StaffPhoto;
			}
			set
			{
				if ((this._StaffPhoto != value))
				{
					this.OnStaffPhotoChanging(value);
					this.SendPropertyChanging();
					this._StaffPhoto = value;
					this.SendPropertyChanged("StaffPhoto");
					this.OnStaffPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twitterLink", DbType="NVarChar(255)")]
		public string twitterLink
		{
			get
			{
				return this._twitterLink;
			}
			set
			{
				if ((this._twitterLink != value))
				{
					this.OntwitterLinkChanging(value);
					this.SendPropertyChanging();
					this._twitterLink = value;
					this.SendPropertyChanged("twitterLink");
					this.OntwitterLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facebookLink", DbType="NVarChar(255)")]
		public string facebookLink
		{
			get
			{
				return this._facebookLink;
			}
			set
			{
				if ((this._facebookLink != value))
				{
					this.OnfacebookLinkChanging(value);
					this.SendPropertyChanging();
					this._facebookLink = value;
					this.SendPropertyChanged("facebookLink");
					this.OnfacebookLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_instaLink", DbType="NVarChar(255)")]
		public string instaLink
		{
			get
			{
				return this._instaLink;
			}
			set
			{
				if ((this._instaLink != value))
				{
					this.OninstaLinkChanging(value);
					this.SendPropertyChanging();
					this._instaLink = value;
					this.SendPropertyChanged("instaLink");
					this.OninstaLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkedinLink", DbType="NVarChar(255)")]
		public string linkedinLink
		{
			get
			{
				return this._linkedinLink;
			}
			set
			{
				if ((this._linkedinLink != value))
				{
					this.OnlinkedinLinkChanging(value);
					this.SendPropertyChanging();
					this._linkedinLink = value;
					this.SendPropertyChanged("linkedinLink");
					this.OnlinkedinLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffOrder", DbType="Int NOT NULL")]
		public int StaffOrder
		{
			get
			{
				return this._StaffOrder;
			}
			set
			{
				if ((this._StaffOrder != value))
				{
					this.OnStaffOrderChanging(value);
					this.SendPropertyChanging();
					this._StaffOrder = value;
					this.SendPropertyChanged("StaffOrder");
					this.OnStaffOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Designation_DptStaff", Storage="_Designation", ThisKey="DesignationId", OtherKey="DesignationId", IsForeignKey=true)]
		public Designation Designation
		{
			get
			{
				return this._Designation.Entity;
			}
			set
			{
				Designation previousValue = this._Designation.Entity;
				if (((previousValue != value) 
							|| (this._Designation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Designation.Entity = null;
						previousValue.DptStaffs.Remove(this);
					}
					this._Designation.Entity = value;
					if ((value != null))
					{
						value.DptStaffs.Add(this);
						this._DesignationId = value.DesignationId;
					}
					else
					{
						this._DesignationId = default(int);
					}
					this.SendPropertyChanged("Designation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_DptStaff", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.DptStaffs.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.DptStaffs.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_DptStaff1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.DptStaffs1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.DptStaffs1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePaid")]
	public partial class FeePaid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeePaidId;
		
		private int _StudentId;
		
		private bool _Sem1;
		
		private bool _Sem2;
		
		private bool _Sem3;
		
		private bool _Sem4;
		
		private bool _Sem5;
		
		private bool _Sem6;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeePaidIdChanging(int value);
    partial void OnFeePaidIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnSem1Changing(bool value);
    partial void OnSem1Changed();
    partial void OnSem2Changing(bool value);
    partial void OnSem2Changed();
    partial void OnSem3Changing(bool value);
    partial void OnSem3Changed();
    partial void OnSem4Changing(bool value);
    partial void OnSem4Changed();
    partial void OnSem5Changing(bool value);
    partial void OnSem5Changed();
    partial void OnSem6Changing(bool value);
    partial void OnSem6Changed();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public FeePaid()
		{
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaidId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeePaidId
		{
			get
			{
				return this._FeePaidId;
			}
			set
			{
				if ((this._FeePaidId != value))
				{
					this.OnFeePaidIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaidId = value;
					this.SendPropertyChanged("FeePaidId");
					this.OnFeePaidIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem1", DbType="Bit NOT NULL")]
		public bool Sem1
		{
			get
			{
				return this._Sem1;
			}
			set
			{
				if ((this._Sem1 != value))
				{
					this.OnSem1Changing(value);
					this.SendPropertyChanging();
					this._Sem1 = value;
					this.SendPropertyChanged("Sem1");
					this.OnSem1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem2", DbType="Bit NOT NULL")]
		public bool Sem2
		{
			get
			{
				return this._Sem2;
			}
			set
			{
				if ((this._Sem2 != value))
				{
					this.OnSem2Changing(value);
					this.SendPropertyChanging();
					this._Sem2 = value;
					this.SendPropertyChanged("Sem2");
					this.OnSem2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem3", DbType="Bit NOT NULL")]
		public bool Sem3
		{
			get
			{
				return this._Sem3;
			}
			set
			{
				if ((this._Sem3 != value))
				{
					this.OnSem3Changing(value);
					this.SendPropertyChanging();
					this._Sem3 = value;
					this.SendPropertyChanged("Sem3");
					this.OnSem3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem4", DbType="Bit NOT NULL")]
		public bool Sem4
		{
			get
			{
				return this._Sem4;
			}
			set
			{
				if ((this._Sem4 != value))
				{
					this.OnSem4Changing(value);
					this.SendPropertyChanging();
					this._Sem4 = value;
					this.SendPropertyChanged("Sem4");
					this.OnSem4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem5", DbType="Bit NOT NULL")]
		public bool Sem5
		{
			get
			{
				return this._Sem5;
			}
			set
			{
				if ((this._Sem5 != value))
				{
					this.OnSem5Changing(value);
					this.SendPropertyChanging();
					this._Sem5 = value;
					this.SendPropertyChanged("Sem5");
					this.OnSem5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem6", DbType="Bit NOT NULL")]
		public bool Sem6
		{
			get
			{
				return this._Sem6;
			}
			set
			{
				if ((this._Sem6 != value))
				{
					this.OnSem6Changing(value);
					this.SendPropertyChanging();
					this._Sem6 = value;
					this.SendPropertyChanged("Sem6");
					this.OnSem6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePaid", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeePaids.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeePaids.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_FeePaid", Storage="_Student", ThisKey="StudentId", OtherKey="StudentId", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.FeePaids.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.FeePaids.Add(this);
						this._StudentId = value.StudentId;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentType")]
	public partial class StudentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentTypeId;
		
		private string _StudentTypeName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentTypeIdChanging(int value);
    partial void OnStudentTypeIdChanged();
    partial void OnStudentTypeNameChanging(string value);
    partial void OnStudentTypeNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public StudentType()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentTypeId
		{
			get
			{
				return this._StudentTypeId;
			}
			set
			{
				if ((this._StudentTypeId != value))
				{
					this.OnStudentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StudentTypeId = value;
					this.SendPropertyChanged("StudentTypeId");
					this.OnStudentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentTypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentTypeName
		{
			get
			{
				return this._StudentTypeName;
			}
			set
			{
				if ((this._StudentTypeName != value))
				{
					this.OnStudentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._StudentTypeName = value;
					this.SendPropertyChanged("StudentTypeName");
					this.OnStudentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentType_Student", Storage="_Students", ThisKey="StudentTypeId", OtherKey="StudentTypeId")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StudentType", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.StudentTypes.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.StudentTypes.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StudentType1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.StudentTypes1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.StudentTypes1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.StudentType = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.StudentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginLog")]
	public partial class LoginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginLogId;
		
		private string _UserName;
		
		private string _LoginPassword;
		
		private string _ClientBrowser;
		
		private string _LoginDevice;
		
		private string _IPAddress;
		
		private string _ReferrerUrl;
		
		private byte _LoginResult;
		
		private System.DateTime _LoginTime;
		
		private System.DateTime _LastUpdatedOn;
		
		private System.Nullable<byte> _UserType;
		
		private string _GoogleLocation;
		
		private string _IMEINo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginLogIdChanging(int value);
    partial void OnLoginLogIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnClientBrowserChanging(string value);
    partial void OnClientBrowserChanged();
    partial void OnLoginDeviceChanging(string value);
    partial void OnLoginDeviceChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnReferrerUrlChanging(string value);
    partial void OnReferrerUrlChanged();
    partial void OnLoginResultChanging(byte value);
    partial void OnLoginResultChanged();
    partial void OnLoginTimeChanging(System.DateTime value);
    partial void OnLoginTimeChanged();
    partial void OnLastUpdatedOnChanging(System.DateTime value);
    partial void OnLastUpdatedOnChanged();
    partial void OnUserTypeChanging(System.Nullable<byte> value);
    partial void OnUserTypeChanged();
    partial void OnGoogleLocationChanging(string value);
    partial void OnGoogleLocationChanged();
    partial void OnIMEINoChanging(string value);
    partial void OnIMEINoChanged();
    #endregion
		
		public LoginLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginLogId
		{
			get
			{
				return this._LoginLogId;
			}
			set
			{
				if ((this._LoginLogId != value))
				{
					this.OnLoginLogIdChanging(value);
					this.SendPropertyChanging();
					this._LoginLogId = value;
					this.SendPropertyChanged("LoginLogId");
					this.OnLoginLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientBrowser", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientBrowser
		{
			get
			{
				return this._ClientBrowser;
			}
			set
			{
				if ((this._ClientBrowser != value))
				{
					this.OnClientBrowserChanging(value);
					this.SendPropertyChanging();
					this._ClientBrowser = value;
					this.SendPropertyChanged("ClientBrowser");
					this.OnClientBrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDevice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginDevice
		{
			get
			{
				return this._LoginDevice;
			}
			set
			{
				if ((this._LoginDevice != value))
				{
					this.OnLoginDeviceChanging(value);
					this.SendPropertyChanging();
					this._LoginDevice = value;
					this.SendPropertyChanged("LoginDevice");
					this.OnLoginDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferrerUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ReferrerUrl
		{
			get
			{
				return this._ReferrerUrl;
			}
			set
			{
				if ((this._ReferrerUrl != value))
				{
					this.OnReferrerUrlChanging(value);
					this.SendPropertyChanging();
					this._ReferrerUrl = value;
					this.SendPropertyChanged("ReferrerUrl");
					this.OnReferrerUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginResult", DbType="TinyInt NOT NULL")]
		public byte LoginResult
		{
			get
			{
				return this._LoginResult;
			}
			set
			{
				if ((this._LoginResult != value))
				{
					this.OnLoginResultChanging(value);
					this.SendPropertyChanging();
					this._LoginResult = value;
					this.SendPropertyChanged("LoginResult");
					this.OnLoginResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="DateTime NOT NULL")]
		public System.DateTime LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedOn
		{
			get
			{
				return this._LastUpdatedOn;
			}
			set
			{
				if ((this._LastUpdatedOn != value))
				{
					this.OnLastUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedOn = value;
					this.SendPropertyChanged("LastUpdatedOn");
					this.OnLastUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt")]
		public System.Nullable<byte> UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleLocation", DbType="NVarChar(250)")]
		public string GoogleLocation
		{
			get
			{
				return this._GoogleLocation;
			}
			set
			{
				if ((this._GoogleLocation != value))
				{
					this.OnGoogleLocationChanging(value);
					this.SendPropertyChanging();
					this._GoogleLocation = value;
					this.SendPropertyChanged("GoogleLocation");
					this.OnGoogleLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMEINo", DbType="NVarChar(150)")]
		public string IMEINo
		{
			get
			{
				return this._IMEINo;
			}
			set
			{
				if ((this._IMEINo != value))
				{
					this.OnIMEINoChanging(value);
					this.SendPropertyChanging();
					this._IMEINo = value;
					this.SendPropertyChanged("IMEINo");
					this.OnIMEINoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private string _MenuTitle;
		
		private System.Nullable<int> _PageId;
		
		private int _MenuNo;
		
		private System.Nullable<int> _ParentMenuId;
		
		private string _MenuIcon;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntityRef<Menu> _Menu1;
		
		private EntityRef<Page> _Page;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnMenuTitleChanging(string value);
    partial void OnMenuTitleChanged();
    partial void OnPageIdChanging(System.Nullable<int> value);
    partial void OnPageIdChanged();
    partial void OnMenuNoChanging(int value);
    partial void OnMenuNoChanged();
    partial void OnParentMenuIdChanging(System.Nullable<int> value);
    partial void OnParentMenuIdChanged();
    partial void OnMenuIconChanging(string value);
    partial void OnMenuIconChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Menu()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._Menu1 = default(EntityRef<Menu>);
			this._Page = default(EntityRef<Page>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MenuTitle
		{
			get
			{
				return this._MenuTitle;
			}
			set
			{
				if ((this._MenuTitle != value))
				{
					this.OnMenuTitleChanging(value);
					this.SendPropertyChanging();
					this._MenuTitle = value;
					this.SendPropertyChanged("MenuTitle");
					this.OnMenuTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int")]
		public System.Nullable<int> PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuNo", DbType="Int NOT NULL")]
		public int MenuNo
		{
			get
			{
				return this._MenuNo;
			}
			set
			{
				if ((this._MenuNo != value))
				{
					this.OnMenuNoChanging(value);
					this.SendPropertyChanging();
					this._MenuNo = value;
					this.SendPropertyChanged("MenuNo");
					this.OnMenuNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuId", DbType="Int")]
		public System.Nullable<int> ParentMenuId
		{
			get
			{
				return this._ParentMenuId;
			}
			set
			{
				if ((this._ParentMenuId != value))
				{
					if (this._Menu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuId = value;
					this.SendPropertyChanged("ParentMenuId");
					this.OnParentMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuIcon", DbType="NVarChar(255)")]
		public string MenuIcon
		{
			get
			{
				return this._MenuIcon;
			}
			set
			{
				if ((this._MenuIcon != value))
				{
					this.OnMenuIconChanging(value);
					this.SendPropertyChanging();
					this._MenuIcon = value;
					this.SendPropertyChanged("MenuIcon");
					this.OnMenuIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menus", ThisKey="MenuId", OtherKey="ParentMenuId")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_RoleMenus", ThisKey="MenuId", OtherKey="MenuId")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menu1", ThisKey="ParentMenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Menu Menu1
		{
			get
			{
				return this._Menu1.Entity;
			}
			set
			{
				Menu previousValue = this._Menu1.Entity;
				if (((previousValue != value) 
							|| (this._Menu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu1.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Menu1.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._ParentMenuId = value.MenuId;
					}
					else
					{
						this._ParentMenuId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Menu", Storage="_Page", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Menu", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notice")]
	public partial class Notice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoticeId;
		
		private string _NoticeTitle;
		
		private string _NoticePath;
		
		private System.Nullable<bool> _ShowNotice;
		
		private byte _Status;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticeIdChanging(int value);
    partial void OnNoticeIdChanged();
    partial void OnNoticeTitleChanging(string value);
    partial void OnNoticeTitleChanged();
    partial void OnNoticePathChanging(string value);
    partial void OnNoticePathChanged();
    partial void OnShowNoticeChanging(System.Nullable<bool> value);
    partial void OnShowNoticeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Notice()
		{
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NoticeId
		{
			get
			{
				return this._NoticeId;
			}
			set
			{
				if ((this._NoticeId != value))
				{
					this.OnNoticeIdChanging(value);
					this.SendPropertyChanging();
					this._NoticeId = value;
					this.SendPropertyChanged("NoticeId");
					this.OnNoticeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NoticeTitle
		{
			get
			{
				return this._NoticeTitle;
			}
			set
			{
				if ((this._NoticeTitle != value))
				{
					this.OnNoticeTitleChanging(value);
					this.SendPropertyChanging();
					this._NoticeTitle = value;
					this.SendPropertyChanged("NoticeTitle");
					this.OnNoticeTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticePath", DbType="NVarChar(255)")]
		public string NoticePath
		{
			get
			{
				return this._NoticePath;
			}
			set
			{
				if ((this._NoticePath != value))
				{
					this.OnNoticePathChanging(value);
					this.SendPropertyChanging();
					this._NoticePath = value;
					this.SendPropertyChanged("NoticePath");
					this.OnNoticePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowNotice", DbType="Bit")]
		public System.Nullable<bool> ShowNotice
		{
			get
			{
				return this._ShowNotice;
			}
			set
			{
				if ((this._ShowNotice != value))
				{
					this.OnShowNoticeChanging(value);
					this.SendPropertyChanging();
					this._ShowNotice = value;
					this.SendPropertyChanged("ShowNotice");
					this.OnShowNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Notice", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Notices.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Notices.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Notice1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Notices1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Notices1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private int _PageGroupId;
		
		private string _PageName;
		
		private string _PageUrl;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Menu> _Menus;
		
		private EntityRef<PageGroup> _PageGroup;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnPageGroupIdChanging(int value);
    partial void OnPageGroupIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnPageUrlChanging(string value);
    partial void OnPageUrlChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Page()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._PageGroup = default(EntityRef<PageGroup>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroupId", DbType="Int NOT NULL")]
		public int PageGroupId
		{
			get
			{
				return this._PageGroupId;
			}
			set
			{
				if ((this._PageGroupId != value))
				{
					if (this._PageGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PageGroupId = value;
					this.SendPropertyChanged("PageGroupId");
					this.OnPageGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageUrl
		{
			get
			{
				return this._PageUrl;
			}
			set
			{
				if ((this._PageUrl != value))
				{
					this.OnPageUrlChanging(value);
					this.SendPropertyChanging();
					this._PageUrl = value;
					this.SendPropertyChanged("PageUrl");
					this.OnPageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Menu", Storage="_Menus", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageGroup_Page", Storage="_PageGroup", ThisKey="PageGroupId", OtherKey="PageGroupId", IsForeignKey=true)]
		public PageGroup PageGroup
		{
			get
			{
				return this._PageGroup.Entity;
			}
			set
			{
				PageGroup previousValue = this._PageGroup.Entity;
				if (((previousValue != value) 
							|| (this._PageGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageGroup.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._PageGroup.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._PageGroupId = value.PageGroupId;
					}
					else
					{
						this._PageGroupId = default(int);
					}
					this.SendPropertyChanged("PageGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Page", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageGroup")]
	public partial class PageGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageGroupId;
		
		private string _PageGroupName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageGroupIdChanging(int value);
    partial void OnPageGroupIdChanged();
    partial void OnPageGroupNameChanging(string value);
    partial void OnPageGroupNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PageGroup()
		{
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageGroupId
		{
			get
			{
				return this._PageGroupId;
			}
			set
			{
				if ((this._PageGroupId != value))
				{
					this.OnPageGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PageGroupId = value;
					this.SendPropertyChanged("PageGroupId");
					this.OnPageGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroupName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageGroupName
		{
			get
			{
				return this._PageGroupName;
			}
			set
			{
				if ((this._PageGroupName != value))
				{
					this.OnPageGroupNameChanging(value);
					this.SendPropertyChanging();
					this._PageGroupName = value;
					this.SendPropertyChanged("PageGroupName");
					this.OnPageGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageGroup_Page", Storage="_Pages", ThisKey="PageGroupId", OtherKey="PageGroupId")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PageGroup", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PageGroups.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PageGroups.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.PageGroup = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.PageGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleTitle;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntitySet<StaffLoginRole> _StaffLoginRoles;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleTitleChanging(string value);
    partial void OnRoleTitleChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Role()
		{
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._StaffLoginRoles = new EntitySet<StaffLoginRole>(new Action<StaffLoginRole>(this.attach_StaffLoginRoles), new Action<StaffLoginRole>(this.detach_StaffLoginRoles));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RoleTitle
		{
			get
			{
				return this._RoleTitle;
			}
			set
			{
				if ((this._RoleTitle != value))
				{
					this.OnRoleTitleChanging(value);
					this.SendPropertyChanging();
					this._RoleTitle = value;
					this.SendPropertyChanged("RoleTitle");
					this.OnRoleTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMenu", Storage="_RoleMenus", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_StaffLoginRole", Storage="_StaffLoginRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<StaffLoginRole> StaffLoginRoles
		{
			get
			{
				return this._StaffLoginRoles;
			}
			set
			{
				this._StaffLoginRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Role", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMenu")]
	public partial class RoleMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleMenuId;
		
		private int _RoleId;
		
		private int _MenuId;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanCreate;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleMenuIdChanging(int value);
    partial void OnRoleMenuIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanCreateChanging(bool value);
    partial void OnCanCreateChanged();
    #endregion
		
		public RoleMenu()
		{
			this._Menu = default(EntityRef<Menu>);
			this._Role = default(EntityRef<Role>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleMenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleMenuId
		{
			get
			{
				return this._RoleMenuId;
			}
			set
			{
				if ((this._RoleMenuId != value))
				{
					this.OnRoleMenuIdChanging(value);
					this.SendPropertyChanging();
					this._RoleMenuId = value;
					this.SendPropertyChanged("RoleMenuId");
					this.OnRoleMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL")]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCreate", DbType="Bit NOT NULL")]
		public bool CanCreate
		{
			get
			{
				return this._CanCreate;
			}
			set
			{
				if ((this._CanCreate != value))
				{
					this.OnCanCreateChanging(value);
					this.SendPropertyChanging();
					this._CanCreate = value;
					this.SendPropertyChanged("CanCreate");
					this.OnCanCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMenu", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RoleMenu", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SessionId;
		
		private string _SessionName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnSessionNameChanging(string value);
    partial void OnSessionNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Session()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SessionName
		{
			get
			{
				return this._SessionName;
			}
			set
			{
				if ((this._SessionName != value))
				{
					this.OnSessionNameChanging(value);
					this.SendPropertyChanging();
					this._SessionName = value;
					this.SendPropertyChanged("SessionName");
					this.OnSessionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_Student", Storage="_Students", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Session", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Session1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Sessions1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Sessions1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffId;
		
		private string _StaffName;
		
		private string _StaffCode;
		
		private byte _StaffType;
		
		private string _FatherName;
		
		private string _MobileNo;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Email;
		
		private byte _Gender;
		
		private string _FullAddress;
		
		private System.DateTime _JoinDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private byte _Status;
		
		private EntitySet<StaffLogin> _StaffLogins;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnStaffCodeChanging(string value);
    partial void OnStaffCodeChanged();
    partial void OnStaffTypeChanging(byte value);
    partial void OnStaffTypeChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnFullAddressChanging(string value);
    partial void OnFullAddressChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Staff()
		{
			this._StaffLogins = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins), new Action<StaffLogin>(this.detach_StaffLogins));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffCode
		{
			get
			{
				return this._StaffCode;
			}
			set
			{
				if ((this._StaffCode != value))
				{
					this.OnStaffCodeChanging(value);
					this.SendPropertyChanging();
					this._StaffCode = value;
					this.SendPropertyChanged("StaffCode");
					this.OnStaffCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffType", DbType="TinyInt NOT NULL")]
		public byte StaffType
		{
			get
			{
				return this._StaffType;
			}
			set
			{
				if ((this._StaffType != value))
				{
					this.OnStaffTypeChanging(value);
					this.SendPropertyChanging();
					this._StaffType = value;
					this.SendPropertyChanged("StaffType");
					this.OnStaffTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(255)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(20)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullAddress", DbType="NVarChar(255)")]
		public string FullAddress
		{
			get
			{
				return this._FullAddress;
			}
			set
			{
				if ((this._FullAddress != value))
				{
					this.OnFullAddressChanging(value);
					this.SendPropertyChanging();
					this._FullAddress = value;
					this.SendPropertyChanged("FullAddress");
					this.OnFullAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_StaffLogin", Storage="_StaffLogins", ThisKey="StaffId", OtherKey="StaffId")]
		public EntitySet<StaffLogin> StaffLogins
		{
			get
			{
				return this._StaffLogins;
			}
			set
			{
				this._StaffLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Staff", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffLogin")]
	public partial class StaffLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffLoginId;
		
		private int _StaffId;
		
		private string _UserName;
		
		private string _LoginPassword;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private byte _Status;
		
		private EntitySet<City> _Cities;
		
		private EntitySet<City> _Cities1;
		
		private EntitySet<Designation> _Designations;
		
		private EntitySet<Designation> _Designations1;
		
		private EntitySet<DptStaff> _DptStaffs;
		
		private EntitySet<DptStaff> _DptStaffs1;
		
		private EntitySet<FeePaid> _FeePaids;
		
		private EntitySet<StudentType> _StudentTypes;
		
		private EntitySet<StudentType> _StudentTypes1;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<Notice> _Notices;
		
		private EntitySet<Notice> _Notices1;
		
		private EntitySet<Page> _Pages;
		
		private EntitySet<PageGroup> _PageGroups;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntitySet<Session> _Sessions;
		
		private EntitySet<Session> _Sessions1;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<StaffLogin> _StaffLogins;
		
		private EntitySet<StaffLogin> _StaffLogins1;
		
		private EntitySet<StaffLoginRole> _StaffLoginRoles;
		
		private EntitySet<StaffLoginRole> _StaffLoginRoles1;
		
		private EntitySet<State> _States;
		
		private EntitySet<State> _States1;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Student> _Students1;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<StaffLogin> _StaffLogin2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffLoginIdChanging(int value);
    partial void OnStaffLoginIdChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public StaffLogin()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._Cities1 = new EntitySet<City>(new Action<City>(this.attach_Cities1), new Action<City>(this.detach_Cities1));
			this._Designations = new EntitySet<Designation>(new Action<Designation>(this.attach_Designations), new Action<Designation>(this.detach_Designations));
			this._Designations1 = new EntitySet<Designation>(new Action<Designation>(this.attach_Designations1), new Action<Designation>(this.detach_Designations1));
			this._DptStaffs = new EntitySet<DptStaff>(new Action<DptStaff>(this.attach_DptStaffs), new Action<DptStaff>(this.detach_DptStaffs));
			this._DptStaffs1 = new EntitySet<DptStaff>(new Action<DptStaff>(this.attach_DptStaffs1), new Action<DptStaff>(this.detach_DptStaffs1));
			this._FeePaids = new EntitySet<FeePaid>(new Action<FeePaid>(this.attach_FeePaids), new Action<FeePaid>(this.detach_FeePaids));
			this._StudentTypes = new EntitySet<StudentType>(new Action<StudentType>(this.attach_StudentTypes), new Action<StudentType>(this.detach_StudentTypes));
			this._StudentTypes1 = new EntitySet<StudentType>(new Action<StudentType>(this.attach_StudentTypes1), new Action<StudentType>(this.detach_StudentTypes1));
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._Notices = new EntitySet<Notice>(new Action<Notice>(this.attach_Notices), new Action<Notice>(this.detach_Notices));
			this._Notices1 = new EntitySet<Notice>(new Action<Notice>(this.attach_Notices1), new Action<Notice>(this.detach_Notices1));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._PageGroups = new EntitySet<PageGroup>(new Action<PageGroup>(this.attach_PageGroups), new Action<PageGroup>(this.detach_PageGroups));
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			this._Sessions1 = new EntitySet<Session>(new Action<Session>(this.attach_Sessions1), new Action<Session>(this.detach_Sessions1));
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._StaffLogins = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins), new Action<StaffLogin>(this.detach_StaffLogins));
			this._StaffLogins1 = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins1), new Action<StaffLogin>(this.detach_StaffLogins1));
			this._StaffLoginRoles = new EntitySet<StaffLoginRole>(new Action<StaffLoginRole>(this.attach_StaffLoginRoles), new Action<StaffLoginRole>(this.detach_StaffLoginRoles));
			this._StaffLoginRoles1 = new EntitySet<StaffLoginRole>(new Action<StaffLoginRole>(this.attach_StaffLoginRoles1), new Action<StaffLoginRole>(this.detach_StaffLoginRoles1));
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			this._States1 = new EntitySet<State>(new Action<State>(this.attach_States1), new Action<State>(this.detach_States1));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Students1 = new EntitySet<Student>(new Action<Student>(this.attach_Students1), new Action<Student>(this.detach_Students1));
			this._Staff = default(EntityRef<Staff>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._StaffLogin2 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffLoginId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffLoginId
		{
			get
			{
				return this._StaffLoginId;
			}
			set
			{
				if ((this._StaffLoginId != value))
				{
					this.OnStaffLoginIdChanging(value);
					this.SendPropertyChanging();
					this._StaffLoginId = value;
					this.SendPropertyChanged("StaffLoginId");
					this.OnStaffLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_City", Storage="_Cities", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_City1", Storage="_Cities1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<City> Cities1
		{
			get
			{
				return this._Cities1;
			}
			set
			{
				this._Cities1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Designation", Storage="_Designations", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Designation> Designations
		{
			get
			{
				return this._Designations;
			}
			set
			{
				this._Designations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Designation1", Storage="_Designations1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Designation> Designations1
		{
			get
			{
				return this._Designations1;
			}
			set
			{
				this._Designations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_DptStaff", Storage="_DptStaffs", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<DptStaff> DptStaffs
		{
			get
			{
				return this._DptStaffs;
			}
			set
			{
				this._DptStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_DptStaff1", Storage="_DptStaffs1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<DptStaff> DptStaffs1
		{
			get
			{
				return this._DptStaffs1;
			}
			set
			{
				this._DptStaffs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePaid", Storage="_FeePaids", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeePaid> FeePaids
		{
			get
			{
				return this._FeePaids;
			}
			set
			{
				this._FeePaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StudentType", Storage="_StudentTypes", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<StudentType> StudentTypes
		{
			get
			{
				return this._StudentTypes;
			}
			set
			{
				this._StudentTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StudentType1", Storage="_StudentTypes1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<StudentType> StudentTypes1
		{
			get
			{
				return this._StudentTypes1;
			}
			set
			{
				this._StudentTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Menu", Storage="_Menus", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Notice", Storage="_Notices", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Notice> Notices
		{
			get
			{
				return this._Notices;
			}
			set
			{
				this._Notices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Notice1", Storage="_Notices1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Notice> Notices1
		{
			get
			{
				return this._Notices1;
			}
			set
			{
				this._Notices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Page", Storage="_Pages", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PageGroup", Storage="_PageGroups", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PageGroup> PageGroups
		{
			get
			{
				return this._PageGroups;
			}
			set
			{
				this._PageGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Role", Storage="_Roles", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RoleMenu", Storage="_RoleMenus", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Session", Storage="_Sessions", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Session> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Session1", Storage="_Sessions1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Session> Sessions1
		{
			get
			{
				return this._Sessions1;
			}
			set
			{
				this._Sessions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Staff", Storage="_Staffs", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin", Storage="_StaffLogins", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<StaffLogin> StaffLogins
		{
			get
			{
				return this._StaffLogins;
			}
			set
			{
				this._StaffLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin1", Storage="_StaffLogins1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<StaffLogin> StaffLogins1
		{
			get
			{
				return this._StaffLogins1;
			}
			set
			{
				this._StaffLogins1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole", Storage="_StaffLoginRoles", ThisKey="StaffLoginId", OtherKey="StaffLoginId")]
		public EntitySet<StaffLoginRole> StaffLoginRoles
		{
			get
			{
				return this._StaffLoginRoles;
			}
			set
			{
				this._StaffLoginRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole1", Storage="_StaffLoginRoles1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<StaffLoginRole> StaffLoginRoles1
		{
			get
			{
				return this._StaffLoginRoles1;
			}
			set
			{
				this._StaffLoginRoles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_State", Storage="_States", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_State1", Storage="_States1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<State> States1
		{
			get
			{
				return this._States1;
			}
			set
			{
				this._States1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Student", Storage="_Students", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Student1", Storage="_Students1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Student> Students1
		{
			get
			{
				return this._Students1;
			}
			set
			{
				this._Students1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_StaffLogin", Storage="_Staff", ThisKey="StaffId", OtherKey="StaffId", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.StaffLogins.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.StaffLogins.Add(this);
						this._StaffId = value.StaffId;
					}
					else
					{
						this._StaffId = default(int);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.StaffLogins.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.StaffLogins.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin1", Storage="_StaffLogin2", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin2
		{
			get
			{
				return this._StaffLogin2.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin2.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin2.Entity = null;
						previousValue.StaffLogins1.Remove(this);
					}
					this._StaffLogin2.Entity = value;
					if ((value != null))
					{
						value.StaffLogins1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Cities1(City entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Cities1(City entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Designations(Designation entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Designations(Designation entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Designations1(Designation entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Designations1(Designation entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_DptStaffs(DptStaff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_DptStaffs(DptStaff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_DptStaffs1(DptStaff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_DptStaffs1(DptStaff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeePaids(FeePaid entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeePaids(FeePaid entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StudentTypes(StudentType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_StudentTypes(StudentType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StudentTypes1(StudentType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_StudentTypes1(StudentType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Notices(Notice entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Notices(Notice entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Notices1(Notice entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Notices1(Notice entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PageGroups(PageGroup entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PageGroups(PageGroup entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Sessions1(Session entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Sessions1(Session entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_StaffLogins1(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin2 = this;
		}
		
		private void detach_StaffLogins1(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin2 = null;
		}
		
		private void attach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StaffLoginRoles1(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_StaffLoginRoles1(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_States1(State entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_States1(State entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Students1(Student entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Students1(Student entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffLoginRole")]
	public partial class StaffLoginRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffLoginRoleId;
		
		private int _StaffLoginId;
		
		private int _RoleId;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffLoginRoleIdChanging(int value);
    partial void OnStaffLoginRoleIdChanged();
    partial void OnStaffLoginIdChanging(int value);
    partial void OnStaffLoginIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public StaffLoginRole()
		{
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffLoginRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffLoginRoleId
		{
			get
			{
				return this._StaffLoginRoleId;
			}
			set
			{
				if ((this._StaffLoginRoleId != value))
				{
					this.OnStaffLoginRoleIdChanging(value);
					this.SendPropertyChanging();
					this._StaffLoginRoleId = value;
					this.SendPropertyChanged("StaffLoginRoleId");
					this.OnStaffLoginRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffLoginId", DbType="Int NOT NULL")]
		public int StaffLoginId
		{
			get
			{
				return this._StaffLoginId;
			}
			set
			{
				if ((this._StaffLoginId != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffLoginIdChanging(value);
					this.SendPropertyChanging();
					this._StaffLoginId = value;
					this.SendPropertyChanged("StaffLoginId");
					this.OnStaffLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole", Storage="_StaffLogin", ThisKey="StaffLoginId", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.StaffLoginRoles.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.StaffLoginRoles.Add(this);
						this._StaffLoginId = value.StaffLoginId;
					}
					else
					{
						this._StaffLoginId = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.StaffLoginRoles1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.StaffLoginRoles1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_StaffLoginRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.StaffLoginRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.StaffLoginRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private string _StateName;
		
		private byte _Status;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<City> _Cities;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Student> _Students1;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public State()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Students1 = new EntitySet<Student>(new Action<Student>(this.attach_Students1), new Action<Student>(this.detach_Students1));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_Cities", ThisKey="StateId", OtherKey="StateId")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Student", Storage="_Students", ThisKey="StateId", OtherKey="PermanentStateId")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Student1", Storage="_Students1", ThisKey="StateId", OtherKey="CorrespondenceStateId")]
		public EntitySet<Student> Students1
		{
			get
			{
				return this._Students1;
			}
			set
			{
				this._Students1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_State", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.States.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_State1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.States1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.States1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Students1(Student entity)
		{
			this.SendPropertyChanging();
			entity.State1 = this;
		}
		
		private void detach_Students1(Student entity)
		{
			this.SendPropertyChanging();
			entity.State1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentId;
		
		private int _StudentTypeId;
		
		private string _StudentName;
		
		private int _SessionId;
		
		private string _AdmissionNo;
		
		private System.DateTime _DOB;
		
		private byte _Gender;
		
		private string _FatherName;
		
		private string _FatherOccupation;
		
		private string _MotherName;
		
		private string _MotherOccupation;
		
		private string _GuardianMobileNo;
		
		private string _CorrespondenceAddress;
		
		private int _CorrespondenceStateId;
		
		private int _CorrespondenceCityId;
		
		private System.Nullable<int> _CorrespondencePinCode;
		
		private string _PermanentAddress;
		
		private int _PermanentStateId;
		
		private int _PermanentCityId;
		
		private System.Nullable<int> _PermanentPinCode;
		
		private System.Nullable<byte> _Category;
		
		private System.Nullable<byte> _BloodGroup;
		
		private System.Nullable<byte> _Religion;
		
		private string _MobileNo;
		
		private string _AlternateMobileNo;
		
		private string _Email;
		
		private string _AadhaarNo;
		
		private string _StudentPhoto;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private int _ClassRoll;
		
		private string _UniversityRoll;
		
		private EntitySet<FeePaid> _FeePaids;
		
		private EntityRef<City> _City;
		
		private EntityRef<City> _City1;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<State> _State;
		
		private EntityRef<State> _State1;
		
		private EntityRef<StudentType> _StudentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnStudentTypeIdChanging(int value);
    partial void OnStudentTypeIdChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnFatherOccupationChanging(string value);
    partial void OnFatherOccupationChanged();
    partial void OnMotherNameChanging(string value);
    partial void OnMotherNameChanged();
    partial void OnMotherOccupationChanging(string value);
    partial void OnMotherOccupationChanged();
    partial void OnGuardianMobileNoChanging(string value);
    partial void OnGuardianMobileNoChanged();
    partial void OnCorrespondenceAddressChanging(string value);
    partial void OnCorrespondenceAddressChanged();
    partial void OnCorrespondenceStateIdChanging(int value);
    partial void OnCorrespondenceStateIdChanged();
    partial void OnCorrespondenceCityIdChanging(int value);
    partial void OnCorrespondenceCityIdChanged();
    partial void OnCorrespondencePinCodeChanging(System.Nullable<int> value);
    partial void OnCorrespondencePinCodeChanged();
    partial void OnPermanentAddressChanging(string value);
    partial void OnPermanentAddressChanged();
    partial void OnPermanentStateIdChanging(int value);
    partial void OnPermanentStateIdChanged();
    partial void OnPermanentCityIdChanging(int value);
    partial void OnPermanentCityIdChanged();
    partial void OnPermanentPinCodeChanging(System.Nullable<int> value);
    partial void OnPermanentPinCodeChanged();
    partial void OnCategoryChanging(System.Nullable<byte> value);
    partial void OnCategoryChanged();
    partial void OnBloodGroupChanging(System.Nullable<byte> value);
    partial void OnBloodGroupChanged();
    partial void OnReligionChanging(System.Nullable<byte> value);
    partial void OnReligionChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAlternateMobileNoChanging(string value);
    partial void OnAlternateMobileNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAadhaarNoChanging(string value);
    partial void OnAadhaarNoChanged();
    partial void OnStudentPhotoChanging(string value);
    partial void OnStudentPhotoChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnClassRollChanging(int value);
    partial void OnClassRollChanged();
    partial void OnUniversityRollChanging(string value);
    partial void OnUniversityRollChanged();
    #endregion
		
		public Student()
		{
			this._FeePaids = new EntitySet<FeePaid>(new Action<FeePaid>(this.attach_FeePaids), new Action<FeePaid>(this.detach_FeePaids));
			this._City = default(EntityRef<City>);
			this._City1 = default(EntityRef<City>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._State = default(EntityRef<State>);
			this._State1 = default(EntityRef<State>);
			this._StudentType = default(EntityRef<StudentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentTypeId", DbType="Int NOT NULL")]
		public int StudentTypeId
		{
			get
			{
				return this._StudentTypeId;
			}
			set
			{
				if ((this._StudentTypeId != value))
				{
					if (this._StudentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StudentTypeId = value;
					this.SendPropertyChanged("StudentTypeId");
					this.OnStudentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherOccupation", DbType="NVarChar(255)")]
		public string FatherOccupation
		{
			get
			{
				return this._FatherOccupation;
			}
			set
			{
				if ((this._FatherOccupation != value))
				{
					this.OnFatherOccupationChanging(value);
					this.SendPropertyChanging();
					this._FatherOccupation = value;
					this.SendPropertyChanged("FatherOccupation");
					this.OnFatherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MotherName
		{
			get
			{
				return this._MotherName;
			}
			set
			{
				if ((this._MotherName != value))
				{
					this.OnMotherNameChanging(value);
					this.SendPropertyChanging();
					this._MotherName = value;
					this.SendPropertyChanged("MotherName");
					this.OnMotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherOccupation", DbType="NVarChar(255)")]
		public string MotherOccupation
		{
			get
			{
				return this._MotherOccupation;
			}
			set
			{
				if ((this._MotherOccupation != value))
				{
					this.OnMotherOccupationChanging(value);
					this.SendPropertyChanging();
					this._MotherOccupation = value;
					this.SendPropertyChanged("MotherOccupation");
					this.OnMotherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianMobileNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string GuardianMobileNo
		{
			get
			{
				return this._GuardianMobileNo;
			}
			set
			{
				if ((this._GuardianMobileNo != value))
				{
					this.OnGuardianMobileNoChanging(value);
					this.SendPropertyChanging();
					this._GuardianMobileNo = value;
					this.SendPropertyChanged("GuardianMobileNo");
					this.OnGuardianMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(255)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this.OnCorrespondenceAddressChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddress = value;
					this.SendPropertyChanged("CorrespondenceAddress");
					this.OnCorrespondenceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceStateId", DbType="Int NOT NULL")]
		public int CorrespondenceStateId
		{
			get
			{
				return this._CorrespondenceStateId;
			}
			set
			{
				if ((this._CorrespondenceStateId != value))
				{
					if (this._State1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceStateIdChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceStateId = value;
					this.SendPropertyChanged("CorrespondenceStateId");
					this.OnCorrespondenceStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceCityId", DbType="Int NOT NULL")]
		public int CorrespondenceCityId
		{
			get
			{
				return this._CorrespondenceCityId;
			}
			set
			{
				if ((this._CorrespondenceCityId != value))
				{
					if (this._City1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceCityIdChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceCityId = value;
					this.SendPropertyChanged("CorrespondenceCityId");
					this.OnCorrespondenceCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondencePinCode", DbType="Int")]
		public System.Nullable<int> CorrespondencePinCode
		{
			get
			{
				return this._CorrespondencePinCode;
			}
			set
			{
				if ((this._CorrespondencePinCode != value))
				{
					this.OnCorrespondencePinCodeChanging(value);
					this.SendPropertyChanging();
					this._CorrespondencePinCode = value;
					this.SendPropertyChanged("CorrespondencePinCode");
					this.OnCorrespondencePinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(255)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this.OnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._PermanentAddress = value;
					this.SendPropertyChanged("PermanentAddress");
					this.OnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentStateId", DbType="Int NOT NULL")]
		public int PermanentStateId
		{
			get
			{
				return this._PermanentStateId;
			}
			set
			{
				if ((this._PermanentStateId != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermanentStateIdChanging(value);
					this.SendPropertyChanging();
					this._PermanentStateId = value;
					this.SendPropertyChanged("PermanentStateId");
					this.OnPermanentStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityId", DbType="Int NOT NULL")]
		public int PermanentCityId
		{
			get
			{
				return this._PermanentCityId;
			}
			set
			{
				if ((this._PermanentCityId != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermanentCityIdChanging(value);
					this.SendPropertyChanging();
					this._PermanentCityId = value;
					this.SendPropertyChanged("PermanentCityId");
					this.OnPermanentCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentPinCode", DbType="Int")]
		public System.Nullable<int> PermanentPinCode
		{
			get
			{
				return this._PermanentPinCode;
			}
			set
			{
				if ((this._PermanentPinCode != value))
				{
					this.OnPermanentPinCodeChanging(value);
					this.SendPropertyChanging();
					this._PermanentPinCode = value;
					this.SendPropertyChanged("PermanentPinCode");
					this.OnPermanentPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="TinyInt")]
		public System.Nullable<byte> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroup", DbType="TinyInt")]
		public System.Nullable<byte> BloodGroup
		{
			get
			{
				return this._BloodGroup;
			}
			set
			{
				if ((this._BloodGroup != value))
				{
					this.OnBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._BloodGroup = value;
					this.SendPropertyChanged("BloodGroup");
					this.OnBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="TinyInt")]
		public System.Nullable<byte> Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(10)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateMobileNo", DbType="NVarChar(10)")]
		public string AlternateMobileNo
		{
			get
			{
				return this._AlternateMobileNo;
			}
			set
			{
				if ((this._AlternateMobileNo != value))
				{
					this.OnAlternateMobileNoChanging(value);
					this.SendPropertyChanging();
					this._AlternateMobileNo = value;
					this.SendPropertyChanged("AlternateMobileNo");
					this.OnAlternateMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AadhaarNo", DbType="NVarChar(12)")]
		public string AadhaarNo
		{
			get
			{
				return this._AadhaarNo;
			}
			set
			{
				if ((this._AadhaarNo != value))
				{
					this.OnAadhaarNoChanging(value);
					this.SendPropertyChanging();
					this._AadhaarNo = value;
					this.SendPropertyChanged("AadhaarNo");
					this.OnAadhaarNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhoto", DbType="NVarChar(255)")]
		public string StudentPhoto
		{
			get
			{
				return this._StudentPhoto;
			}
			set
			{
				if ((this._StudentPhoto != value))
				{
					this.OnStudentPhotoChanging(value);
					this.SendPropertyChanging();
					this._StudentPhoto = value;
					this.SendPropertyChanged("StudentPhoto");
					this.OnStudentPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoll", DbType="Int NOT NULL")]
		public int ClassRoll
		{
			get
			{
				return this._ClassRoll;
			}
			set
			{
				if ((this._ClassRoll != value))
				{
					this.OnClassRollChanging(value);
					this.SendPropertyChanging();
					this._ClassRoll = value;
					this.SendPropertyChanged("ClassRoll");
					this.OnClassRollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityRoll", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UniversityRoll
		{
			get
			{
				return this._UniversityRoll;
			}
			set
			{
				if ((this._UniversityRoll != value))
				{
					this.OnUniversityRollChanging(value);
					this.SendPropertyChanging();
					this._UniversityRoll = value;
					this.SendPropertyChanged("UniversityRoll");
					this.OnUniversityRollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_FeePaid", Storage="_FeePaids", ThisKey="StudentId", OtherKey="StudentId")]
		public EntitySet<FeePaid> FeePaids
		{
			get
			{
				return this._FeePaids;
			}
			set
			{
				this._FeePaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Student", Storage="_City", ThisKey="PermanentCityId", OtherKey="CityId", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._PermanentCityId = value.CityId;
					}
					else
					{
						this._PermanentCityId = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Student1", Storage="_City1", ThisKey="CorrespondenceCityId", OtherKey="CityId", IsForeignKey=true)]
		public City City1
		{
			get
			{
				return this._City1.Entity;
			}
			set
			{
				City previousValue = this._City1.Entity;
				if (((previousValue != value) 
							|| (this._City1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City1.Entity = null;
						previousValue.Students1.Remove(this);
					}
					this._City1.Entity = value;
					if ((value != null))
					{
						value.Students1.Add(this);
						this._CorrespondenceCityId = value.CityId;
					}
					else
					{
						this._CorrespondenceCityId = default(int);
					}
					this.SendPropertyChanged("City1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_Student", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Student", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Student1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Students1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Students1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Student", Storage="_State", ThisKey="PermanentStateId", OtherKey="StateId", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._PermanentStateId = value.StateId;
					}
					else
					{
						this._PermanentStateId = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Student1", Storage="_State1", ThisKey="CorrespondenceStateId", OtherKey="StateId", IsForeignKey=true)]
		public State State1
		{
			get
			{
				return this._State1.Entity;
			}
			set
			{
				State previousValue = this._State1.Entity;
				if (((previousValue != value) 
							|| (this._State1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State1.Entity = null;
						previousValue.Students1.Remove(this);
					}
					this._State1.Entity = value;
					if ((value != null))
					{
						value.Students1.Add(this);
						this._CorrespondenceStateId = value.StateId;
					}
					else
					{
						this._CorrespondenceStateId = default(int);
					}
					this.SendPropertyChanged("State1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentType_Student", Storage="_StudentType", ThisKey="StudentTypeId", OtherKey="StudentTypeId", IsForeignKey=true)]
		public StudentType StudentType
		{
			get
			{
				return this._StudentType.Entity;
			}
			set
			{
				StudentType previousValue = this._StudentType.Entity;
				if (((previousValue != value) 
							|| (this._StudentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentType.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._StudentType.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._StudentTypeId = value.StudentTypeId;
					}
					else
					{
						this._StudentTypeId = default(int);
					}
					this.SendPropertyChanged("StudentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeePaids(FeePaid entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_FeePaids(FeePaid entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
}
#pragma warning restore 1591
